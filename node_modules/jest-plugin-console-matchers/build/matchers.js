'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Base of all console matchers. This is a higher order function that mocks
 * out the console method and counts the number of calls.
 */
var createConsoleMatcher = exports.createConsoleMatcher = function createConsoleMatcher(method) {
  return function (callback, message) {
    var spy = jest.spyOn(global.console, method).mockImplementation(jest.fn);
    var value = callback();
    var count = spy.mock.calls.length;
    var pass = count > 0;

    // Restore the mock to allow other console methods.
    spy.mockRestore();

    if (count > 0) {
      return {
        pass: true,
        message: function message() {
          return 'expected \'console.' + method + '\' to not be called';
        }
      };
    } else {
      return {
        pass: false,
        message: function message() {
          return 'expected \'console.' + method + '\' to be called at least once';
        }
      };
    }
  };
};

var toConsoleError = exports.toConsoleError = createConsoleMatcher('error');
var toConsoleInfo = exports.toConsoleInfo = createConsoleMatcher('info');
var toConsoleLog = exports.toConsoleLog = createConsoleMatcher('log');
var toConsoleWarn = exports.toConsoleWarn = createConsoleMatcher('warn');

// Special case for Facebook's warning module.
var toThrowWarning = exports.toThrowWarning = createConsoleMatcher('error');