"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Defines a variable called `name` in scope `scope`. The value is evaluated
 * the only when the variable is used. This allows us to create
 * lazily evaluated variables for testing purposes.
 */
var define = function define(_ref) {
  var scope = _ref.scope,
      name = _ref.name,
      block = _ref.block;

  var value = void 0;
  var isEvaluated = false;

  Object.defineProperty(scope, name, {
    configurable: true,

    // Set to the lazily evaluated function.
    get: function get() {
      // If the value has been computed before, return that value.
      // Otherwise, we should compute it!
      if (!isEvaluated) {
        try {
          value = block.call(scope);
        } finally {
          isEvaluated = true;
        }
      }

      return value;
    }
  });
};

exports.default = define;